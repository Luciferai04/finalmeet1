apiVersion: v1
kind: Namespace
metadata:
 name: real-time-translator
 labels:
 name: real-time-translator

---
apiVersion: v1
kind: ConfigMap
metadata:
 name: app-config
 namespace: real-time-translator
data:
 ENVIRONMENT: "production"
 LOG_LEVEL: "info"
 WORKERS: "4"
 GRADIO_SERVER_NAME: "0.0.0.0"
 GRADIO_SERVER_PORT: "7860"

---
apiVersion: v1
kind: Secret
metadata:
 name: app-secrets
 namespace: real-time-translator
type: Opaque
stringData:
 GOOGLE_API_KEY: "your-google-api-key-here"
 HUGGINGFACE_API_KEY: "your-huggingface-api-key-here"
 DATABASE_URL: "your-database-connection-string-here"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: models-pvc
 namespace: real-time-translator
spec:
 accessModes:
 - ReadWriteOnce
 resources:
 requests:
 storage: 10Gi
 storageClassName: gp2 # Change based on cloud provider

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: uploads-pvc
 namespace: real-time-translator
spec:
 accessModes:
 - ReadWriteOnce
 resources:
 requests:
 storage: 5Gi
 storageClassName: gp2 # Change based on cloud provider

---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: real-time-translator
 namespace: real-time-translator
 labels:
 app: real-time-translator
spec:
 replicas: 2
 selector:
 matchLabels:
 app: real-time-translator
 template:
 metadata:
 labels:
 app: real-time-translator
 spec:
 containers:
 - name: real-time-translator
 image: real-time-translator:latest
 imagePullPolicy: Always
 ports:
 - containerPort: 7860
 name: http
 env:
 - name: ENVIRONMENT
 valueFrom:
 configMapKeyRef:
 name: app-config
 key: ENVIRONMENT
 - name: LOG_LEVEL
 valueFrom:
 configMapKeyRef:
 name: app-config
 key: LOG_LEVEL
 - name: WORKERS
 valueFrom:
 configMapKeyRef:
 name: app-config
 key: WORKERS
 - name: GRADIO_SERVER_NAME
 valueFrom:
 configMapKeyRef:
 name: app-config
 key: GRADIO_SERVER_NAME
 - name: GRADIO_SERVER_PORT
 valueFrom:
 configMapKeyRef:
 name: app-config
 key: GRADIO_SERVER_PORT
 - name: GOOGLE_API_KEY
 valueFrom:
 secretKeyRef:
 name: app-secrets
 key: GOOGLE_API_KEY
 - name: HUGGINGFACE_API_KEY
 valueFrom:
 secretKeyRef:
 name: app-secrets
 key: HUGGINGFACE_API_KEY
 - name: DATABASE_URL
 valueFrom:
 secretKeyRef:
 name: app-secrets
 key: DATABASE_URL
 resources:
 requests:
 memory: "2Gi"
 cpu: "1000m"
 limits:
 memory: "4Gi"
 cpu: "2000m"
 volumeMounts:
 - name: models-storage
 mountPath: /app/models
 - name: uploads-storage
 mountPath: /app/uploads
 livenessProbe:
 httpGet:
 path: /health
 port: 7860
 initialDelaySeconds: 60
 periodSeconds: 30
 timeoutSeconds: 10
 failureThreshold: 3
 readinessProbe:
 httpGet:
 path: /health
 port: 7860
 initialDelaySeconds: 30
 periodSeconds: 10
 timeoutSeconds: 5
 failureThreshold: 3
 volumes:
 - name: models-storage
 persistentVolumeClaim:
 claimName: models-pvc
 - name: uploads-storage
 persistentVolumeClaim:
 claimName: uploads-pvc

---
apiVersion: v1
kind: Service
metadata:
 name: real-time-translator-service
 namespace: real-time-translator
 labels:
 app: real-time-translator
spec:
 type: ClusterIP
 ports:
 - port: 80
 targetPort: 7860
 protocol: TCP
 name: http
 selector:
 app: real-time-translator

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: real-time-translator-ingress
 namespace: real-time-translator
 annotations:
 kubernetes.io/ingress.class: "nginx"
 cert-manager.io/cluster-issuer: "letsencrypt-prod"
 nginx.ingress.kubernetes.io/proxy-body-size: "100m"
 nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
 nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
 nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
 tls:
 - hosts:
 - real-time-translator.example.com
 secretName: real-time-translator-tls
 rules:
 - host: real-time-translator.example.com
 http:
 paths:
 - path: /
 pathType: Prefix
 backend:
 service:
 name: real-time-translator-service
 port:
 number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
 name: real-time-translator-hpa
 namespace: real-time-translator
spec:
 scaleTargetRef:
 apiVersion: apps/v1
 kind: Deployment
 name: real-time-translator
 minReplicas: 2
 maxReplicas: 10
 metrics:
 - type: Resource
 resource:
 name: cpu
 target:
 type: Utilization
 averageUtilization: 70
 - type: Resource
 resource:
 name: memory
 target:
 type: Utilization
 averageUtilization: 80

---
# Redis for caching (optional)
apiVersion: apps/v1
kind: Deployment
metadata:
 name: redis
 namespace: real-time-translator
spec:
 replicas: 1
 selector:
 matchLabels:
 app: redis
 template:
 metadata:
 labels:
 app: redis
 spec:
 containers:
 - name: redis
 image: redis:7-alpine
 ports:
 - containerPort: 6379
 resources:
 requests:
 memory: "256Mi"
 cpu: "100m"
 limits:
 memory: "512Mi"
 cpu: "200m"
 volumeMounts:
 - name: redis-storage
 mountPath: /data
 volumes:
 - name: redis-storage
 persistentVolumeClaim:
 claimName: redis-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: redis-pvc
 namespace: real-time-translator
spec:
 accessModes:
 - ReadWriteOnce
 resources:
 requests:
 storage: 1Gi
 storageClassName: gp2

---
apiVersion: v1
kind: Service
metadata:
 name: redis-service
 namespace: real-time-translator
spec:
 type: ClusterIP
 ports:
 - port: 6379
 targetPort: 6379
 selector:
 app: redis

---
# Monitoring with Prometheus (optional)
apiVersion: v1
kind: ServiceMonitor
metadata:
 name: real-time-translator-metrics
 namespace: real-time-translator
 labels:
 app: real-time-translator
spec:
 selector:
 matchLabels:
 app: real-time-translator
 endpoints:
 - port: http
 interval: 30s
 path: /metrics
