# Production Dockerfile for Real-Time Translator
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV PYTHONPATH=/app

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        ffmpeg \
        libsndfile1 \
        libsndfile1-dev \
        portaudio19-dev \
        redis-tools \
        curl \
        wget \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir flask flask-cors \
    && pip install --no-cache-dir gunicorn prometheus-client \
    && pip install --no-cache-dir requests python-dotenv

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p logs uploads reports transcripts schemas course_materials ssl

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Start command
CMD ["gunicorn", "-c", "gunicorn.conf.py", "flask_api_fixed:app"]
